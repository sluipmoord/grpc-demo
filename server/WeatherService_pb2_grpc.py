# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import WeatherService_pb2 as WeatherService__pb2


class WeatherServiceStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetWeather = channel.unary_unary(
        '/WeatherService/GetWeather',
        request_serializer=WeatherService__pb2.City.SerializeToString,
        response_deserializer=WeatherService__pb2.Weather.FromString,
        )


class WeatherServiceServicer(object):

  def GetWeather(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_WeatherServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetWeather': grpc.unary_unary_rpc_method_handler(
          servicer.GetWeather,
          request_deserializer=WeatherService__pb2.City.FromString,
          response_serializer=WeatherService__pb2.Weather.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'WeatherService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
